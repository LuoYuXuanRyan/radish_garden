---
import { getCollection } from 'astro:content';
import Post from '../../layout/post.astro';
import Prose from '../../components/Prose.astro';
import Navigation from '../../layout/navigation.astro';

export async function getStaticPaths() {
    const blogEntries = await getCollection('posts');
    return blogEntries.map((entry) => ({
        params: { slug: entry.slug },
        props: { entry },
    }));
}

const { entry } = Astro.props;
const { Content, headings } = await entry.render();
---

<Post>
    <Navigation slot='header' />
    <Prose slot='article'>
        <Content />
    </Prose>
    <div slot='headings'>
        {
            headings.map(
                (
                    heading: { depth: number; slug: string; text: string },
                    id: number
                ) => {
                    let space = ' '.repeat((heading.depth - 1) * 4);
                    let text = `${id + 1}. ${heading.text}`;
                    let full_text = `${space}${text}`;
                    return (
                        <a
                            class='whitespace-pre
                                text-profileTextLight dark:text-profileTextDark 
                                hover:bg-bgLight dark:hover:bg-bgDark
                                rounded-md w-full block font-bold'
                            href={`#${heading.slug}`}
                        >
                            {full_text}
                        </a>
                    );
                }
            )
        }
    </div>
</Post>

<script>
    let copyButtonLabel = 'Copy';
    let codeBlocks = Array.from(document.querySelectorAll('pre'));

    for (let codeBlock of codeBlocks) {
        let wrapper = document.createElement('div');
        wrapper.style.position = 'relative';
        let copyButton = document.createElement('button');
        copyButton.className = 'copy-code';
        copyButton.innerHTML = copyButtonLabel;
        copyButton.style.position = 'absolute';
        copyButton.style.right = '10px';
        copyButton.style.top = '3px';

        codeBlock.setAttribute('tabindex', '0');
        codeBlock.appendChild(copyButton);

        codeBlock.parentNode!.insertBefore(wrapper, codeBlock);
        wrapper.appendChild(codeBlock);

        copyButton.addEventListener('click', async () => {
            await copyCode(codeBlock, copyButton);
        });
    }

    async function copyCode(block: HTMLElement, button: HTMLElement) {
        let code = block.querySelector('code');
        let text = code?.innerText || '';

        await navigator.clipboard.writeText(text);

        button.innerText = 'Copied';

        setTimeout(() => {
            button.innerText = copyButtonLabel;
        }, 1000);
    }
</script>
